version: '3.8'
x-spark-common:
  &spark-common
  build:
      context: ./spark_service
  volumes:
      - ./postgresql-42.6.0.jar:/opt/bitnami/spark/jars/postgresql-42.6.0.jar
      - ./pysparkprocessing:/opt/bitnami/spark/pysparkprocessing
      - ./jars_dir:/opt/bitnami/spark/ivy:z

services:
  mongodb:
    image: mongo
    restart: always
    container_name: mongodb
    # volumes:
    #   - mongo_data:/data/db
    ports:
      - "27017:27017" 
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
        - fastapi-network

  fastapi:
      build:
        context: ./fastapi_service
      hostname: fastapi
      container_name: fastapi
      command: sh -c "/wait && python main.py"
      ports:
        - 8000:8000
      environment:
        - WAIT_HOSTS=kafka:9092
        - WAIT_HOSTS_TIMEOUT=300
        - WAIT_SLEEP_INTERVAL=30
        - WAIT_HOST_CONNECT_TIMEOUT=30
      networks:
        - fastapi-network
      depends_on:
      - mongodb
      - kafka
  
  zookeeper:
    restart: always
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - fastapi-network

  kafka:
    restart: always
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - 9093:9093
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - fastapi-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - 8081:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      - kafka
    networks:
      - fastapi-network

  spark-master:
    build:
      context: ./spark_service
    container_name: spark-master
    volumes:
      - ./pysparkprocessing:/opt/bitnami/spark/pysparkprocessing
      - ./jars_dir:/opt/bitnami/spark/ivy:z
    command: bin/spark-class org.apache.spark.deploy.master.Master
    user: root
    environment:
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8082:8080"
      - "7077:7077"
      - "4040:4040"
    networks:
      - fastapi-network  # Same network as Kafka
    depends_on:
      - kafka  # Ensures Kafka is running before Spark starts

  spark-worker-1:
    <<: *spark-common
    container_name: spark-worker
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    user: root
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=Worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1g
      - SPARK_WORKER_PORT=8881
      - SPARK_WORKER_WEBUI_PORT=8081
    networks:
      - fastapi-network  # Same network as Kafka

networks:
  fastapi-network:
    driver: bridge
# volumes:
#   mongo_data: